<?xml version="1.0" encoding="UTF-8"?>

<!--
  Copyright (c) 2015, 2019, Gluon and/or its affiliates.
  All rights reserved. Use is subject to license terms.

  This file is available and licensed under the following license:

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions
  are met:

  - Redistributions of source code must retain the above copyright
    notice, this list of conditions and the following disclaimer.
  - Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in
    the documentation and/or other materials provided with the distribution.
  - Neither the name of Oracle Corporation nor the names of its
    contributors may be used to endorse or promote products derived
    from this software without specific prior written permission.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<?import java.lang.String?>
<?import javafx.collections.FXCollections?>
<?import javafx.geometry.Insets?>
<?import javafx.scene.control.Button?>
<?import javafx.scene.control.ComboBox?>
<?import javafx.scene.control.Label?>
<?import javafx.scene.control.Menu?>
<?import javafx.scene.control.MenuBar?>
<?import javafx.scene.control.MenuItem?>
<?import javafx.scene.control.RadioButton?>
<?import javafx.scene.control.RadioMenuItem?>
<?import javafx.scene.control.ScrollPane?>
<?import javafx.scene.control.SeparatorMenuItem?>
<?import javafx.scene.control.SplitPane?>
<?import javafx.scene.layout.ColumnConstraints?>
<?import javafx.scene.layout.GridPane?>
<?import javafx.scene.layout.Pane?>
<?import javafx.scene.layout.RowConstraints?>
<?import javafx.scene.layout.StackPane?>
<?import javafx.scene.layout.VBox?>

<VBox prefHeight="400.0" prefWidth="640.0" xmlns="http://javafx.com/javafx/23.0.1" xmlns:fx="http://javafx.com/fxml/1" fx:controller="group50.controller.MainControlController">
  <children>
    <MenuBar useSystemMenuBar="true" VBox.vgrow="NEVER">
      <menus>
        <Menu mnemonicParsing="false" text="File">
          <items>
            <MenuItem mnemonicParsing="false" text="Open…" />
                  <MenuItem mnemonicParsing="false" text="Import" />
                  <MenuItem mnemonicParsing="false" text="Export" />
            <SeparatorMenuItem mnemonicParsing="false" />
            <MenuItem mnemonicParsing="false" text="Save" />
            <MenuItem mnemonicParsing="false" text="Save As…" />
            <SeparatorMenuItem mnemonicParsing="false" />
            <MenuItem mnemonicParsing="false" text="Preferences…" />
            <SeparatorMenuItem mnemonicParsing="false" />
            <MenuItem mnemonicParsing="false" text="Quit" />
          </items>
        </Menu>
        <Menu mnemonicParsing="false" text="Edit">
               <items>
                  <MenuItem mnemonicParsing="false" text="Add Obstacle" />
                  <MenuItem mnemonicParsing="false" text="Remove Obstacle" />
                  <MenuItem mnemonicParsing="false" text="Modify Obstacle" />
                  <MenuItem mnemonicParsing="false" text="Clear All Obstacles" />
               </items>
        </Menu>
        <Menu mnemonicParsing="false" text="View">
          <items>
            <MenuItem mnemonicParsing="false" text="Zoom in" />
                  <MenuItem mnemonicParsing="false" text="Zoom out" />
                  <MenuItem mnemonicParsing="false" text="Reset View" />
                  <RadioMenuItem mnemonicParsing="false" text="Show Details" />
          </items>
        </Menu>
            <Menu mnemonicParsing="false" text="Tools">
              <items>
                <MenuItem mnemonicParsing="false" text="Run Simulation" />
                  <MenuItem mnemonicParsing="false" text="Calculate Clearance" />
                  <MenuItem mnemonicParsing="false" text="Generate Report" />
              </items>
            </Menu>
      </menus>
    </MenuBar>
      <StackPane prefHeight="150.0" prefWidth="200.0" VBox.vgrow="ALWAYS">
         <children>
            <SplitPane dividerPositions="0.6873040752351097" prefHeight="377.0" prefWidth="640.0">
               <items>
                  <Pane fx:id="viewContainer" prefHeight="371.0" prefWidth="418.0" styleClass="stack-pane-background" />
                  <ScrollPane fitToHeight="true" fitToWidth="true" prefHeight="200.0" prefWidth="200.0">
                     <content>
                        <VBox fx:id="scrollPaneVbox" prefHeight="368.0" prefWidth="167.0" spacing="10.0" style="-fx-background-color: #F0F0F5;">
                           <children>
                              <Label styleClass="section-title" text="View Selection" />
                              <ComboBox fx:id="viewTypeSelector" onAction="#handleViewTypeSelection" prefWidth="150.0" promptText="View Type" styleClass="modern-combo-box">
                                  <items>
                                      <!-- Create an observable list factory for the combo box items -->
                                      <FXCollections fx:factory="observableArrayList">
                                          <!-- Add options here -->
                                          <String fx:value="Top Down" />
                                          <String fx:value="Side on" />
                                      </FXCollections>
                                  </items>

                              </ComboBox>
                              <Label styleClass="section-title" text="Runway Selection" />
                              <ComboBox fx:id="runwaySelector" onAction="#handleRunwaySelectorInput" prefWidth="150.0" promptText="Select Runway" styleClass="modern-combo-box" />
                              <Label styleClass="section-title" text="Overlay Controls" />
                              <GridPane hgap="10" prefHeight="106.0" prefWidth="168.0" style="-fx-padding: 10;" vgap="50">
                                <columnConstraints>
                                  <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0" />
                                  <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0" />
                                </columnConstraints>
                                <rowConstraints>
                                  <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
                                  <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
                                  <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
                                    <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
                                </rowConstraints>
                                 <children>
                                    <RadioButton fx:id="showResaToggle" mnemonicParsing="false" onAction="#handleResaOverlayShow" styleClass="rounded-radio-button" text="RESA" GridPane.rowIndex="2" />
                                    <RadioButton fx:id="showToraToggle" mnemonicParsing="false" onAction="#handleToraOverlayShow" styleClass="rounded-radio-button" text="TORA" />
                                    <RadioButton fx:id="showTodaToggle" mnemonicParsing="false" onAction="#handleTodaOverlayShow" styleClass="rounded-radio-button" text="TODA" GridPane.columnIndex="1" />
                                    <RadioButton fx:id="showLdaToggle" mnemonicParsing="false" onAction="#handleLdaOverlayShow" styleClass="rounded-radio-button" text="LDA" GridPane.rowIndex="1" />
                                    <RadioButton fx:id="showAsdaToggle" mnemonicParsing="false" onAction="#handleAsdaOverlayShow" styleClass="rounded-radio-button" text="ASDA" GridPane.columnIndex="1" GridPane.rowIndex="1" />
                                    <RadioButton fx:id="showClearwayToggle" mnemonicParsing="false" onAction="#handleClearwayOverlayShow" prefHeight="18.0" prefWidth="132.0" styleClass="rounded-radio-button" text="Clearway" GridPane.columnIndex="1" GridPane.rowIndex="2" />
                                    <RadioButton fx:id="showCAGToggle" mnemonicParsing="false" onAction="#handleCAGOverlayShow" prefHeight="18.0" prefWidth="140.0" styleClass="rounded-radio-button" text="Cleared Area" GridPane.rowIndex="3" />
                                 </children>
                              </GridPane>
                              <Button mnemonicParsing="false" prefHeight="26.0" prefWidth="165.0" text="Add Obstacle" />
                           </children>
                        </VBox>
                     </content>
                     <padding>
                        <Insets top="10.0" />
                     </padding>
                  </ScrollPane>
               </items>
            </SplitPane>
         </children>
      </StackPane>
  </children>
</VBox>
